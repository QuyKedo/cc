import os,sys
import requests,json
from time import sleep
from datetime import datetime, timedelta
import base64,requests,os
import dns.resolver
import socket
from tabulate import tabulate
from pystyle import Write
from tabulate import tabulate
from pystyle import Colorate, Colors
from datetime import datetime
from colorama import Fore, Style, init
import sys
from random_user_agent.user_agent import UserAgent
from random_user_agent.params import SoftwareName, OperatingSystem

resolver = dns.resolver.Resolver(configure=False)
resolver.nameservers = ['8.8.8.8']
org_socket = socket.getaddrinfo

def google_socket(host, port, family=0, type=0, proto=0, flags=0):
    try:
        info = resolver.resolve(host)
        ip_address = info[0].to_text()
        return org_socket(ip_address, port, family, type, proto, flags)
    except:
        return org_socket(host, port, family, type, proto, flags)

socket.getaddrinfo = google_socket
software_names = [SoftwareName.CHROME.value]
operating_systems = [OperatingSystem.WINDOWS.value, OperatingSystem.LINUX.value]   
user_agent_rotator = UserAgent(software_names=software_names, operating_systems=operating_systems, limit=100)


#m√†u
xnhac = "\033[1;36m"
do = "\033[1;31m"
luc = "\033[1;32m"
vang = "\033[1;33m"
xduong = "\033[1;34m"
hong = "\033[1;35m"
trang = "\033[1;37m"
whiteb="\033[1;37m"
red="\033[0;31m"
redb="\033[1;31m"
end='\033[0m'
#ƒë√°nh d·∫•u b·∫£n quy·ªÅn
ndp_tool="\033[1;31m[\033[1;37m=.=\033[1;31m] \033[1;37m=>  "
thanh = "\033[1;37m= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = ="
#Config
init(autoreset=True)

def banner():
    # X√≥a m√†n h√¨nh
    os.system('cls' if os.name == 'nt' else 'clear')

    # Danh s√°ch m√†u lu√¢n phi√™n
    colors = [Fore.RED, Fore.GREEN, Fore.CYAN, Fore.MAGENTA, Fore.YELLOW, Fore.BLUE]

    banner_text = '''
            ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    üéÄ‚ú® Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Tool ‚ú®üéÄ
    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    üå∏ Ch√∫c b·∫°n m·ªôt ng√†y vui v·∫ª v√† nhi·ªÅu may m·∫Øn! üå∏
    üê± M√®o con ch√∫c b·∫°n code kh√¥ng l·ªói! üê±
    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
      üõ†Ô∏è Admin support tool Zalo:  0367742346
                                   0348865758
        Web t·∫£i tool v√† HD:
        https://mlevip.blogspot.com/2025/02/huong-dan-su-dung-tool-body-font-family.html
      üîó Chat support: https://zalo.me/g/uaahwq871
      üåê Web VPN gi√° r·∫ª & ID Apple free: timgiare.top ‚úîÔ∏è
    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    CopyRight: ¬© KEDO@TOOL
    '''

    # Hi·ªáu ·ª©ng nh·∫•p nh√°y
    for _ in range(5):
        color = colors[_ % len(colors)]
        print(color + banner_text)
        time.sleep(0.5)
        os.system('cls' if os.name == 'nt' else 'clear')

    # Hi·ªÉn th·ªã banner l·∫ßn cu·ªëi v·ªõi m√†u n·ªïi b·∫≠t
    print(Fore.LIGHTCYAN_EX + banner_text)
    print(Fore.LIGHTRED_EX + "-"*70)

def LIST():
    banner()

os.system('cls' if os.name == 'nt' else 'clear')
banner()
token_tds = input(f'{ndp_tool}{luc}Vui L√≤ng Nh·∫≠p Token TƒêS{trang}:{vang} ')
check_log = requests.get('https://traodoisub.com/api/?fields=profile&access_token='+token_tds).json()
if 'success' in check_log:
    print(f'{xnhac}ƒêƒÉng Nh·∫≠p Th√†nh C√¥ng!')
    user = check_log['data']['user']
    xucon = check_log['data']['xu']
    xudie = check_log['data']['xudie']
else:
    exit(f'{do}ƒêƒÉng Nh·∫≠p Th·∫•t B·∫°i.')
print(thanh)
cookie = input(f'{ndp_tool}{luc}Vui L√≤ng Nh·∫≠p Cookie IG{trang}: {vang} ')
#CH·ªåN NV + NH·∫¨P DELAY
os.system("cls" if os.name == "nt" else "clear")
banner()
print(f'{ndp_tool}{luc}T√™n T√†i Kho·∫£n{trang}: {vang}{user}')
print(f'{ndp_tool}{luc}Xu Hi·ªán T·∫°i{trang}: {vang}{xucon}')
print(f'{ndp_tool}{luc}Xu B·ªã Tr·ª´{trang}: {vang}{xudie}')
print(thanh)
print(f'{ndp_tool}{luc}Nh·∫≠p S·ªë {do}[{vang}1{do}] {luc}ƒê·ªÉ Ch·∫°y Nhi·ªám V·ª• Tym')
print(f'{ndp_tool}{luc}Nh·∫≠p S·ªë {do}[{vang}2{do}] {luc}ƒê·ªÉ Ch·∫°y Nhi·ªám V·ª• Follow')
print(f'{ndp_tool}{luc}Nh·∫≠p S·ªë {do}[{vang}3{do}] {luc}ƒê·ªÉ Ch·∫°y Nhi·ªám V·ª• Tym Comment')
print(f'{ndp_tool}{luc}Nh·∫≠p S·ªë {do}[{vang}4{do}] {luc}ƒê·ªÉ Ch·∫°y Nhi·ªám V·ª• Comment {do}[{vang}B·∫¢O TR√å{do}]')
print(thanh)
chonjob = input(f'{ndp_tool}{luc}Nh·∫≠p Nhi·ªám V·ª• B·∫°n Mu·ªën Ch·∫°y{trang}: {vang}')
delayjob = int(input(f'{ndp_tool}{luc}Nh·∫≠p Delay L√†m Nhi·ªám V·ª•{trang}: {vang}'))
os.system("cls" if os.name == "nt" else "clear")
banner()
#h√†m delay + load t√¨m job
def delay_ndp(o):
	while (o>1):
		o=o-1
		print(luc+' Ti·∫øp T·ª•c Sau <~> KeDoTOOL‚ù£Ô∏èüå∏ '+do+'| '+vang+''+str(o)+do+' |','      ', end='\r')
		sleep(0.2)
		print(do+' Ti·∫øp T·ª•c Sau <~> KeDoTOOL‚ù£Ô∏èüå∏ '+do+'| '+vang+''+str(o)+do+' |','      ', end='\r')
		sleep(0.1)
		print(vang+' Ti·∫øp T·ª•c Sau <~> KeDoTOOL‚ù£Ô∏èüå∏ '+do+'| '+vang+''+str(o)+do+' |','      ', end='\r')
		sleep(0.2)
		print(hong+' Ti·∫øp T·ª•c Sau <~> KeDoTOOL‚ù£Ô∏èüå∏ '+do+'| '+vang+''+str(o)+do+' |','      ', end='\r')
		sleep(0.1)
		print(xnhac+' Ti·∫øp T·ª•c Sau <~> KeDoTOOL‚ù£Ô∏èüå∏ '+do+'| '+vang+''+str(o)+do+' |','      ', end='\r')
		sleep(0.2)
def loadjob(o):
	while (o>1):
		o=o-1
		print(luc+' ƒêang T√¨m Nhi·ªám V·ª• <~> KeDoTOOL‚ù£Ô∏èüå∏ '+do+'| '+vang+''+str(o)+do+' |','      ', end='\r')
		sleep(0.2)
		print(do+' ƒêang T√¨m Nhi·ªám V·ª• <~> KeDoTOOL‚ù£Ô∏èüå∏ '+do+'| '+vang+''+str(o)+do+' |','      ', end='\r')
		sleep(0.1)
		print(vang+' ƒêang T√¨m Nhi·ªám V·ª• <~> KeDoTOOL‚ù£Ô∏èüå∏ '+do+'| '+vang+''+str(o)+do+' |','      ', end='\r')
		sleep(0.2)
		print(hong+' ƒêang T√¨m Nhi·ªám V·ª• <~> KeDoTOOL‚ù£Ô∏èüå∏ '+do+'| '+vang+''+str(o)+do+' |','      ', end='\r')
		sleep(0.1)
		print(xnhac+' ƒêang T√¨m Nhi·ªám V·ª• <~> KeDoTOOL‚ù£Ô∏èüå∏ '+do+'| '+vang+''+str(o)+do+' |','      ', end='\r')
		sleep(0.2)

thoigian = datetime.now().strftime("%H:%M:%S")
demjob = 0
#get token...
headers_get = {
    'authority': 'www.instagram.com',
    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
    'accept-language': 'vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5',
    'cache-control': 'max-age=0',
    'referer': 'https://www.instagram.com/accounts/onetap/?next=%2F',
    'sec-ch-prefers-color-scheme': 'light',
    'sec-ch-ua': '".Not/A)Brand";v="99", "Google Chrome";v="103", "Chromium";v="103"',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-platform': '"Windows"',
    'sec-fetch-dest': 'document',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-user': '?1',
    'upgrade-insecure-requests': '1',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36',
    'viewport-width': '1920',
    'cookie': cookie,
}
get_dulieu = requests.get('https://www.instagram.com/', headers = headers_get).text
token_ig = get_dulieu.split('csrf_token":"')[1].split('",')[0]
id_app = get_dulieu.split('"X-IG-App-ID":"')[1].split('",')[0]
instagram_ajax = get_dulieu.split('"rev":')[1].split('},"')[0]
#headers get info
headers_get_in4 = {
    'authority': 'www.instagram.com',
    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
    'accept-language': 'vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5',
    'cache-control': 'max-age=0',
    'sec-ch-prefers-color-scheme': 'light',
    'sec-ch-ua': '".Not/A)Brand";v="99", "Google Chrome";v="103", "Chromium";v="103"',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-platform': '"Windows"',
    'sec-fetch-dest': 'document',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-user': '?1',
    'upgrade-insecure-requests': '1',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36',
    'viewport-width': '1920',
    'cookie': cookie,
}
in4 = requests.get('https://www.instagram.com/', headers = headers_get_in4).text
#t√°ch
id_ig = in4.split('viewerId":"')[1].split('"}')[0]
cauhinhaccig = requests.get(f'https://traodoisub.com/api/?fields=instagram_run&id={id_ig}&access_token='+token_tds).json()
try:
    if 'success' in cauhinhaccig:
        id_ch = cauhinhaccig['data']['id']
        user_ch = cauhinhaccig['data']['uniqueID']
    else:
        exit(f'{do}C·∫•u H√¨nh Th·∫•t B·∫°i, Vui L√≤ng Th√™m Acc V√†o C·∫•u H√¨nh!!!')
except:
    pass
#info c·∫•u h√¨nh
print(f'{ndp_tool}{luc}USER C·∫§U H√åNH{trang}: {vang}{user_ch} {do}| {luc}ID C·∫§U H√åNH{trang}: {vang}{id_ig}')
print(thanh)
#ch·∫ø ƒë·ªô tym
if '1' in chonjob:
    while True:
        get_list_nv_tym = requests.get('https://traodoisub.com/api/?fields=instagram_like&access_token='+token_tds).json()
        try:
            id_tym = get_list_nv_tym['data'][0]['id']
            link_job_tym = get_list_nv_tym['data'][0]['link']
            id_job_tym = id_tym.split('_')[0]
        except:
            bukload = 5
            loadjob(bukload)
            continue
        #headers l√†m job
        headers_job_tym = {
            'authority': 'www.instagram.com',
            'accept': '*/*',
            'accept-language': 'vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5',
            'content-type': 'application/x-www-form-urlencoded',
            'origin': 'https://www.instagram.com',
            'referer': link_job_tym,
            'sec-ch-prefers-color-scheme': 'light',
            'sec-ch-ua': '".Not/A)Brand";v="99", "Google Chrome";v="103", "Chromium";v="103"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
            'sec-fetch-dest': 'empty',
            'sec-fetch-mode': 'cors',
            'sec-fetch-site': 'same-origin',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36',
            'viewport-width': '1014',
            'x-asbd-id': '198387',
            'x-csrftoken': token_ig,
            'x-ig-app-id': id_app,
            'x-ig-www-claim': 'hmac.AR0kbnnl4Sg351vNHgTi5an3lniwX9V0L8BktreD7ETXQhLL',
            'x-instagram-ajax': instagram_ajax,
            'x-requested-with': 'XMLHttpRequest',
            'cookie': cookie,
        }

        lamjobtym = requests.post(f'https://www.instagram.com/web/likes/{id_job_tym}/like/', headers = headers_job_tym).text
        sleep(1)
        duyetnvtym = requests.get(f'https://traodoisub.com/api/coin/?type=INS_LIKE_CACHE&id={id_tym}&access_token='+token_tds).json()
        try:
            xuduyet_tym = duyetnvtym['data']['pending']
            xucong_tym = duyetnvtym['data']['msg']
        except:
            continue
        if 'ok' in lamjobtym:
            demjob = demjob+1
            print(f'{do}[{vang}{demjob}{do}] | {xnhac}{thoigian}{do} | {vang}TYM{do} | {trang}{id_job_tym} {do}| {vang}{xucong_tym} {do}| {luc}T·ªïng Duy·ªát: {vang}{xuduyet_tym} Xu')
            delay_ndp(delayjob)
        else:
            demjob = demjob+1
            print(f'{do}[{vang}{demjob}{do}]{do}[{trang}X{do}] | {xnhac}{thoigian}{do} | {trang}{id_job_tym} {do}| {do}TYM TH·∫§T B·∫†I')
#ch·∫ø ƒë·ªô follow
if '2' in chonjob:
    while True:
        get_list_nv_follow = requests.get('https://traodoisub.com/api/?fields=instagram_follow&access_token='+token_tds).json()
        try:
            id_follow = get_list_nv_follow['data'][0]['id']
            link_follow = get_list_nv_follow['data'][0]['link']
            id_job_follow = id_follow.split('_')[0]
        except:
            bukload = 5
            loadjob(bukload)
            continue
        headers_job_follow = {
            'authority': 'www.instagram.com',
            'accept': '*/*',
            'accept-language': 'vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5',
            'content-type': 'application/x-www-form-urlencoded',
            'origin': 'https://www.instagram.com',
            'referer': link_follow,
            'sec-ch-prefers-color-scheme': 'light',
            'sec-ch-ua': '".Not/A)Brand";v="99", "Google Chrome";v="103", "Chromium";v="103"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
            'sec-fetch-dest': 'empty',
            'sec-fetch-mode': 'cors',
            'sec-fetch-site': 'same-origin',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36',
            'viewport-width': '1014',
            'x-asbd-id': '198387',
            'x-csrftoken': token_ig,
            'x-ig-app-id': id_app,
            'x-ig-www-claim': 'hmac.AR07N5q1wNjFl2rs9Uw-PN1PzCDaBP8lPGzvakw765wEQug0',
            'x-instagram-ajax': instagram_ajax,
            'x-requested-with': 'XMLHttpRequest',
            'cookie': cookie,
        }
        lamjobfollow = requests.post(f'https://www.instagram.com/web/friendships/{id_job_follow}/follow/', headers = headers_job_follow).text
        sleep(1)
        duyetnvfollow = requests.get(f'https://traodoisub.com/api/coin/?type=INS_FOLLOW_CACHE&id={id_follow}&access_token='+token_tds).json()
        try:
            xuduyet_follow = duyetnvfollow['data']['pending']
            xucong_follow = duyetnvfollow['data']['msg']
        except:
            continue
        if 'ok' in lamjobfollow:
            demjob = demjob+1
            print(f'{do}[{vang}{demjob}{do}] | {xnhac}{thoigian}{do} | {vang}FOLLOW{do} | {trang}{id_job_follow} {do}| {vang}{xucong_follow} {do}| {luc}T·ªïng Duy·ªát: {vang}{xuduyet_follow} Xu')
            delay_ndp(delayjob)
        else:
            demjob = demjob+1
            print(f'{do}[{vang}{demjob}{do}]{do}[{trang}X{do}] | {xnhac}{thoigian}{do} | {trang}{id_job_follow} {do}| {do}FOLLOW TH·∫§T B·∫†I')
#ch·∫ø ƒë·ªô tym comment
if '3' in chonjob:
    while True:
        get_list_nv_tymcmt = requests.get('https://traodoisub.com/api/?fields=instagram_likecmt&access_token='+token_tds).json()
        try:
            id_tymcmt = get_list_nv_tymcmt['data'][0]['id']
            link_tymcmt = get_list_nv_tymcmt['data'][0]['link_web']
            id_job_tymcmt = id_tymcmt.split('_')[0]
        except:
            bukload = 5
            loadjob(bukload)
            continue
        headers = {
            'authority': 'www.instagram.com',
            'accept': '*/*',
            'accept-language': 'vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5',
            'content-type': 'application/x-www-form-urlencoded',
            'origin': 'https://www.instagram.com',
            'referer': link_tymcmt,
            'sec-ch-prefers-color-scheme': 'light',
            'sec-ch-ua': '".Not/A)Brand";v="99", "Google Chrome";v="103", "Chromium";v="103"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
            'sec-fetch-dest': 'empty',
            'sec-fetch-mode': 'cors',
            'sec-fetch-site': 'same-origin',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36',
            'viewport-width': '1014',
            'x-asbd-id': '198387',
            'x-csrftoken': token_ig,
            'x-ig-app-id': id_app,
            'x-ig-www-claim': 'hmac.AR0kbnnl4Sg351vNHgTi5an3lniwX9V0L8BktreD7ETXQgRk',
            'x-instagram-ajax': instagram_ajax,
            'x-requested-with': 'XMLHttpRequest',
            'cookie': cookie,
        }
        lamjobtymcmt = requests.post(f'https://www.instagram.com/web/comments/like/{id_job_tymcmt}', headers=headers).text
        duyetnvtymcmt = requests.get(f'https://traodoisub.com/api/coin/?type=INS_LIKECMT_CACHE&id={id_tymcmt}&access_token='+token_tds).json()
        try:
            xuduyet_tymcmt = duyetnvtymcmt['data']['pending']
            xucong_tymcmt = duyetnvtymcmt['data']['msg']
        except:
            continue
        if 'ok' in lamjobtymcmt:
            demjob = demjob+1
            print(f'{do}[{vang}{demjob}{do}] | {xnhac}{thoigian}{do} | {vang}TYM CMT{do} | {trang}{id_job_tymcmt} {do}| {vang}{xucong_tymcmt} {do}| {luc}T·ªïng Duy·ªát: {vang}{xuduyet_tymcmt} Xu')
        else:
            demjob = demjob+1
            print(f'{do}[{vang}{demjob}{do}]{do}[{trang}X{do}] | {xnhac}{thoigian}{do} | {trang}{id_job_tymcmt} {do}| {do}TYM CMT')